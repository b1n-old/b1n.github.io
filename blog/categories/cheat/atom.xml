<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cheat | Paradoxical Delusions]]></title>
  <link href="http://b1n.github.io/blog/categories/cheat/atom.xml" rel="self"/>
  <link href="http://b1n.github.io/"/>
  <updated>2014-04-21T12:00:47+00:00</updated>
  <id>http://b1n.github.io/</id>
  <author>
    <name><![CDATA[Marcio Ribeiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hell Yeah Jackpot Cheat!]]></title>
    <link href="http://b1n.github.io/blog/2014/04/21/hell-yeah-cheat/"/>
    <updated>2014-04-21T04:29:50+00:00</updated>
    <id>http://b1n.github.io/blog/2014/04/21/hell-yeah-cheat</id>
    <content type="html"><![CDATA[<p>Some weeks ago I bought the <em>SEGA Humble Bundle</em>.
Along with some good old classics that surely deserves posts on their own -like
<em>Altered Beast</em>, <em>Golden Axe</em> and the fantastic <a href="http://store.steampowered.com/app/246580/">The Typing of The Dead: Overkill</a>&ndash;
was <a href="http://store.steampowered.com/app/205230/">Hell Yeah! Wrath of the Dead Rabbit</a>.</p>

<h2>Sonic on Steroids!</h2>

<p><img src="/images/hell-yeah-splash.png" width="1024" height="800" title="&lsquo;Sonic on Steroids!&rsquo;" >
Hell Yeah is a crazy action-adventure platformer, full of cartoon violence and toilet humor.
Instant fun for all ages!
Do not let the somewhat low <em>metacritic</em> score fool you. Hell Yeah! is <strong>crazy</strong> good.</p>

<p>For days I have played it during my lunch break, and when it was over and the final boss was put out of his misery
I wanted more, I wanted to get 100% achievements!</p>

<p>There are currently 12 achievements in the game.
After a couple hours 11 were down, just 1 left to go.
But that last one proved to be hard to get&hellip;</p>

<h2>The Jackpot</h2>

<p>You have to hit <strong>JACKPOT</strong> (777) in the <em>Cassino</em> stage slot machines.
And there I was, pressing the &lsquo;<strong>E</strong>&rsquo; key over and over, repeated times&hellip;
Pretending it was fun to watch the symbols roll and then, after 10 minutes
into this very tedious task I finally decided to do what every sane
person in similar grounds would do&hellip; Break the rules! I mean, write a program!</p>

<h2><s>Adventure</s> Programming Time!</h2>

<p>Well, &ldquo;how hard can this be&rdquo; I thought.
All the program has to do is press the &lsquo;<strong>E</strong>&rsquo; key like there is no tomorrow.
Pausing once in a while so the game can process the command.</p>

<p>I was on my younger sons' Windows 7 laptop, with no dev tools.
Despite this harsh, non-dev-friendly environment, I was convinced that this
tale would end quickly and bed would see a happier me with 100% achievements
soon. I could not be more wrong&hellip;</p>

<h3>Windows Script Turn</h3>

<p>What is the quickest way get this done? <a href="http://en.wikipedia.org/wiki/Windows_Script_Host">WSH</a>, I choose you!
``` vb.net Gotta love the simplicity imbued in all form of scripting&hellip;
&lsquo; Create shell object that can &ldquo;type&rdquo; keys
Set s = WScript.CreateObject(&ldquo;WScript.Shell&rdquo;)</p>

<p>Do
  &lsquo; Focus the correct window and send the key
  if s.AppActivate(&ldquo;Hell Yeah!&rdquo;) Then</p>

<pre><code>s.SendKeys "e"
</code></pre>

<p>  End If</p>

<p>  &lsquo; Giving us some time in case we want to kill the script
  WScript.Sleep 2000
Loop
```</p>

<p>Everything was going smoothly according as planned.
It was simple and beautiful, so beautiful that a tear of pure joy started to take form
in the corner of my left eye and then&hellip; nothing&hellip;</p>

<p>The game window was getting focused but nothing happened, no roll in the slot machine, just resounding silence.
The &lsquo;<strong>E</strong>&rsquo; key was not being pressed, or at least not in a way the game would understand.</p>

<p>By that time my wife was already asking me to go bed, but I was so close, or so I thought&hellip;
It would be a shame to give up now. And started downloading <strong>Vim</strong> and the <strong>JDK</strong>&hellip;</p>

<h3>Java Turn</h3>

<p>Usually, Java should be far from the top if your main concern is get things done fast.
But since we have <strong>java.awt.Robot</strong>, which sole purpose is to solve problems like ours, guess
that changes the picture.</p>

<p>``` java What was that word again? Oh yes, verbosity&hellip;
import java.awt.Robot;
import java.awt.event.KeyEvent;</p>

<p>public class Jackpot {
  public static void main(String[] args) throws Exception {</p>

<pre><code>Robot bot = new Robot();

// Giving us some time to focus the correct window manually
Thread.sleep(5000);

// Press and Release the E key 
// Give the game some time to process the key press
while (true) {
  for (int i = 0; i &lt; 20; i++) {
    bot.keyPress(KeyEvent.VK_E);
    bot.keyRelease(KeyEvent.VK_E);
    Thread.sleep(500);
  }

  // Give us some time to kill the program
  Thread.sleep(1000);
}
</code></pre>

<p>  }
}
```</p>

<p>The key was being sent, I could see it but again, nothing happened in the game.
I was so optimistic about Robot, it helped me in the past, did not expect it to fail me now.</p>

<p>My wife fell asleep watching classic Pink Panther cartoons.
Fixed the blanket and kissed her good night. I had a mission to accomplish!</p>

<p>We were getting into the late hours, further into the night.
Cats fighting and hounds barking could sporadically be heard on the streets, time to master
focus and boost solution making:
* <strong>Headphones</strong>: <em>Check</em>
* <strong>Good Music</strong>: <em>Check</em>
* <strong>Energy Drink</strong>: <em>Check</em> <em>Check</em> <em>Check</em></p>

<p>Nothing can stop me now, I will get this done!</p>

<p>Think, what is wrong? Why is the game not getting the keypress events?</p>

<p>What about sending the keys in raw directly to Win32 API?
Calling <em>SendInput</em> from <em>user32.dll</em> should do it.
The options are JNI, C/C++ and C#.
Started downloading <em>.NET SDK</em> and <a href="http://en.wikipedia.org/wiki/Xamarin">Xamarin</a>.</p>

<h4>.NET Turn</h4>

<p>After reading several pages on <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms646310(v=vs.85).aspx">MSDN</a> and
related forums about how the <em>SendInput</em> function and the <strong>INPUT</strong> data structure works, things started making sense.</p>

<p>Collected several pieces of code and experimentations and came up with the following beast:
``` c# Hey little fly, get ready to be <s>squashed</s> cannon balled! Rigmarole FTW!
using System;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Threading;</p>

<p>namespace Jackpot
{
  class Jackpot
  {</p>

<pre><code>struct INPUT
{
  public INPUTType type;
  public INPUTUnion Event;
}

[StructLayout (LayoutKind.Explicit)]
struct INPUTUnion
{
  [FieldOffset (0)]
  internal MOUSEINPUT mi;
  [FieldOffset (0)]
  internal KEYBDINPUT ki;
  [FieldOffset (0)]
  internal HARDWAREINPUT hi;
}

[StructLayout (LayoutKind.Sequential)]
struct MOUSEINPUT
{
  public int dx;
  public int dy;
  public int mouseData;
  public int dwFlags;
  public uint time;
  public IntPtr dwExtraInfo;
}

[StructLayout (LayoutKind.Sequential)]
struct KEYBDINPUT
{
  public short wVk;
  public short wScan;
  public KEYEVENTF dwFlags;
  public int time;
  public IntPtr dwExtraInfo;
}

[StructLayout (LayoutKind.Sequential)]
struct HARDWAREINPUT
{
  public int uMsg;
  public short wParamL;
  public short wParamH;
}

enum INPUTType : uint
{
  INPUT_KEYBOARD = 1
}

[Flags]
enum KEYEVENTF : uint
{
  EXTENDEDKEY = 0x0001,
  KEYUP = 0x0002,
  SCANCODE = 0x0008,
  UNICODE = 0x0004
}

const short KEY_E = 0x0012;

[DllImport ("user32.dll")]
static extern UInt32 SendInput (int numberOfInputs, INPUT[] inputs, int sizeOfInputStructure);

private static void SendKey (short key)
{
  // create input events as unicode with first down, then up
  INPUT[] inputs = new INPUT[2];
  inputs [0].type = inputs [1].type = INPUTType.INPUT_KEYBOARD;
  inputs [0].Event.ki.dwFlags = inputs [1].Event.ki.dwFlags = KEYEVENTF.SCANCODE;
  inputs [0].Event.ki.wScan = inputs [1].Event.ki.wScan = key;    
  inputs [1].Event.ki.dwFlags |= KEYEVENTF.KEYUP;
  SendInput (inputs.Length, inputs, Marshal.SizeOf (typeof(INPUT)));
}

static void Main (string[] args)
{
  // Giving us some time to focus the correct window manually
  System.Threading.Thread.Sleep (5000);

  while (true) {
    for (int i = 0; i &lt; 20; i++) {
      SendKey (KEY_E);
      Thread.Sleep (500);
    }
    Thread.Sleep (2000);
  }
}
</code></pre>

<p>  }
}
```</p>

<p>Yes, that is a lot more code than I thought was necessary to emulate a simple keyPress using the Win32 API and guess what&hellip; it does <strong>NOT</strong> work.
The reasons why this does not work are beyond me but I bet DirectInput is to blame.</p>

<p>No more cat fights or barks, birds started singing instead, enunciating the first sheds of sunlight.</p>

<p>My hope was beaten to a pulp.
I was tired, very tired and suddenly noticed I had not eaten for the past several hours.
Headaches started consuming me&hellip; Giving up crossed my mind but not before one last shot.
I can do this!</p>

<h4>Interceptor saves the day</h4>

<p>Light could be seen at the end of tunnel. Hopefully it was not the train.</p>

<p><a href="https://github.com/jasonpang/Interceptor">Interceptor</a> promissed to simulate keystrokes to <em>DirectX</em> games.</p>

<p>Followed the installation instructions and wrote some code:
``` c#
using Interceptor;
using System.Threading;</p>

<p>namespace Jackpot
{
  public class Jackpot
  {</p>

<pre><code>private static Input input = new Input();

public static void Main (string[] args)
{
  // Give us some time to focus the correct window manually
  Thread.Sleep (5000);

  // Load driver
  input.KeyboardFilterMode = KeyboardFilterMode.All;
  input.KeyPressDelay = 10;
  input.Load();

  while (true) {
    for (int i = 0; i &lt; 20; i++) {
      input.SendKeys (Keys.E);
      Thread.Sleep (500);
    }
    Thread.Sleep (1000);
  }
}

~Jackpot() {
  input.Unload ();
}
</code></pre>

<p>  }
}
```</p>

<p>Marcos, my younger boy, the proud owner of the laptop I had recently transformed into a powerhouse development station,
woke up. Just in time to hear the fantastic story of how his daddy spent a whole night trying to cheat in a game.</p>

<p>&ldquo;Marcos, of course cheating is <strong>wrong</strong>. I did out of curiosity! You see, knowing how to bend the rules does <strong>not</strong>
mean you absolutelly have to. In fact, you can help make the world a better place if you know about this kind of stuff! (&hellip;)&rdquo;</p>

<p>And it worked like a charm:
<img src="/images/hell-yeah-jackpot.png" width="1024" height="800" title="&lsquo;To the victor go the spoils&rsquo;" >
<img src="/images/hell-yeah-all-achievements.png" width="1024" height="800" title="&lsquo;100% achievements&hellip; I can finally rest in peace&rsquo;" ></p>
]]></content>
  </entry>
  
</feed>
